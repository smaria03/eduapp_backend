---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- bearer_auth: []
paths:
  "/api/admin/users":
    post:
      summary: Create a new user (admin only)
      tags:
      - - Admin Users
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: user created
          content:
            application/json:
              example:
                id: 123
                email: student3@example.com
                name: Prenume3 Nume3
                role: student
        '422':
          description: invalid request
          content:
            application/json:
              example:
                errors:
                - Email can't be blank
                - Name can't be blank
                - Password is too short
                - Password confirmation doesn't match Password
                - Role is not included in the list
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                error: 'Access denied: admin only'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - user
              properties:
                user:
                  type: object
                  required:
                  - email
                  - password
                  - password_confirmation
                  - name
                  - role
                  properties:
                    email:
                      type: string
                      example: student3@example.com
                    password:
                      type: string
                      example: '123456'
                    password_confirmation:
                      type: string
                      example: '123456'
                    name:
                      type: string
                      example: Prenume3 Nume3
                    role:
                      type: string
                      enum:
                      - student
                      - teacher
                      example: student
        required: true
  "/api/login":
    post:
      summary: User login
      tags:
      - Authentication
      security: []
      parameters: []
      responses:
        '200':
          description: successful login
          content:
            application/json:
              example:
                user:
                  id: 1
                  name: Prenume1 Nume1
                  email: teacher1@example.com
                  role: teacher
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                errors:
                - Invalid email/password combination
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: User's email address
                  example: teacher1@example.com
                password:
                  type: string
                  description: User's password
                  example: '123456'
              required:
              - email
              - password
        required: true
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
